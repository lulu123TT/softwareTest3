

plugins {
    id 'java'
    id "com.github.spotbugs" version "$spotbugspluginVersion"
    id "info.solidsoft.pitest" version "1.7.4"
}

group 'cn.edu.ctgu'
group 'JDK'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://maven.aliyun.com/repository/public/' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:$findsecbugspluginVersion"


}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile){
    options.encoding("utf-8")
}

apply from: "$rootDir/gradle/config/scripts/style.gradle"
apply from: "$rootDir/gradle/config/scripts/coverage.gradle"
coverage.excludePackages = [
]
coverage.excludeClasses = [
]
style.excludePackages = ['cn.edu.ctgu'
]
style.excludeClasses = ['cn.edu.ctgu.LinkedList'
]

spotbugsTest {
    reports {
        html {
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugsMain {
    reports {
        html {
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
pitest {
    targetClasses = ['cn.edu.ctgu.*']
    threads = 4
    outputFormats = ['HTML']
    timestampedReports = true
    junit5PluginVersion = '0.15'
}
spotbugs {
    toolVersion = "$spotbugsVersion"
    ignoreFailures = true
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'low'
    reportsDir = file("$buildDir/reports/spotbugs")
    maxHeapSize = '2g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
}

